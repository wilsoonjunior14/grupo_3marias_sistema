name: 3Marias - Pipeline
run-name: Pipeline - ${{ github.ref }}
on: [push]
jobs: 
  
  Backend:
    name: Backend - Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Setup the python environment
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r 3marias/scripts/requirements.txt

      # Setup the php environment
      - name: Environment Setup
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo, pdo_mysql
          ini-values: post_max_size=256M, max_execution_time=180
          coverage: xdebug
          tools: php-cs-fixer, phpunit
      - run: php -version

      # Getting the all dependencies of the project
      - name: Build
        run: |
          cd 3marias
          curl https://getcomposer.org/download/latest-stable/composer.phar --output composer.phar
          php composer.phar install

      # Checking the list of dependencies outdated
      - name: Dependencies Outdated
        run: |
          cd 3marias
          php composer.phar outdated --direct

      # Checking project vulnerabilities
      - name: Checking Project Vulnerabilities
        run: |
          cd 3marias
          ./vendor/enlightn/security-checker/security-checker security:check composer.lock

      # Checking the code statically
      - name: Code Analysis
        run: |
          ls -la
          cd 3marias
          ./vendor/bin/phpstan analyse app tests --level=1

      # Check tests
      - name: E2E Tests
        run: |
          cd 3marias
          php artisan config:clear
          php artisan cache:clear
          XDEBUG_MODE=coverage php artisan test --parallel --processes 8 --coverage --testsuite=Backend

          cd scripts
          zip -r coverage.zip ./coverage_reports

      # Publish Coverage Reports
      - name: Publish Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-code-coverage.zip
          path: ./3marias/scripts/coverage.zip
      
      # Check the code coverage
      - name: E2E Tests & Code Coverage
        run: |
          cd 3marias/scripts/coverage
          python3 check_coverage_backend.py

      # Deploy to Locaweb
      - name: Deploy To Locaweb
        uses: locaweb/ftp-deploy@1.0.0
        with:
          host: 'ftp.busqueiapp.com.br' # TODO: it must be located on github actions
          user: 'busqueiapp1' # TODO: it must be located on github actions
          password: 'busqueiapp1@Fwrj' # TODO: it must be located on github actions

  Deploy:
    name: Release
    runs-on: ubuntu-latest
    needs: [Backend]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checking out to the repo
        uses: actions/checkout@v3

      - name: Retrieve version
        run: |
          echo "TAG_NAME=$(grep "tag" 3marias/project.json | tr -d " \ttag\"\:")" >> $GITHUB_ENV
        id: version
      
      - name: Tagging the commit
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.TAG_NAME }}
          message: "Latest release"

      - name: Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: |
            Changelog
            - Generating Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

